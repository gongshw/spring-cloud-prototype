# Generated by tools/ci-compose.py

image: focussource/ci:latest

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using Kubernetes executor, the variable should be set to
  # tcp://localhost:2375 because of how Kubernetes executor connects services
  # to the job container
  DOCKER_HOST: tcp://docker:2375/
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

stages:
  - build
  - check
  - publish



service:demo2:build:
  stage: build
  script:
    - ./build.module.sh service:demo2
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week

service:demo1:demo1-app:build:
  stage: build
  script:
    - ./build.module.sh service:demo1:demo1-app
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week

base:admin-server:build:
  stage: build
  script:
    - ./build.module.sh base:admin-server
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week

base:eureka-server:build:
  stage: build
  script:
    - ./build.module.sh base:eureka-server
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week

base:zuul-proxy:build:
  stage: build
  script:
    - ./build.module.sh base:zuul-proxy
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week

base:auth-server:build:
  stage: build
  script:
    - ./build.module.sh base:auth-server
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week

base:config-server:build:
  stage: build
  script:
    - ./build.module.sh base:config-server
  artifacts:
    paths:
      - output/bin/*.jar
      - output/Dockerfile
    expire_in: 1 week




service:demo2:check:
  stage: check
  script:
    - ./gradlew service:demo2:check --stacktrace

service:demo1:demo1-app:check:
  stage: check
  script:
    - ./gradlew service:demo1:demo1-app:check --stacktrace

base:admin-server:check:
  stage: check
  script:
    - ./gradlew base:admin-server:check --stacktrace

base:eureka-server:check:
  stage: check
  script:
    - ./gradlew base:eureka-server:check --stacktrace

base:zuul-proxy:check:
  stage: check
  script:
    - ./gradlew base:zuul-proxy:check --stacktrace

base:auth-server:check:
  stage: check
  script:
    - ./gradlew base:auth-server:check --stacktrace

base:config-server:check:
  stage: check
  script:
    - ./gradlew base:config-server:check --stacktrace




service:demo2:docker_push:
  stage: publish
  dependencies:
    - service:demo2:build
  script:
    - ./docker.module.sh push service:demo2
  when: manual

service:demo1:demo1-app:docker_push:
  stage: publish
  dependencies:
    - service:demo1:demo1-app:build
  script:
    - ./docker.module.sh push service:demo1:demo1-app
  when: manual

base:admin-server:docker_push:
  stage: publish
  dependencies:
    - base:admin-server:build
  script:
    - ./docker.module.sh push base:admin-server
  when: manual

base:eureka-server:docker_push:
  stage: publish
  dependencies:
    - base:eureka-server:build
  script:
    - ./docker.module.sh push base:eureka-server
  when: manual

base:zuul-proxy:docker_push:
  stage: publish
  dependencies:
    - base:zuul-proxy:build
  script:
    - ./docker.module.sh push base:zuul-proxy
  when: manual

base:auth-server:docker_push:
  stage: publish
  dependencies:
    - base:auth-server:build
  script:
    - ./docker.module.sh push base:auth-server
  when: manual

base:config-server:docker_push:
  stage: publish
  dependencies:
    - base:config-server:build
  script:
    - ./docker.module.sh push base:config-server
  when: manual

